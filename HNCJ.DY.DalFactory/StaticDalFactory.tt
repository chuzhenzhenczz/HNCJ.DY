<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#>

<#@ output extension=".cs" #>
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader=new MetadataLoader(this);
CodeRegion region=new CodeRegion(this,1);
MetadataTools ef = new MetadataTools(this);
string inputFile=@"..\\HNCJ.DY.Model\\DataModel.edmx";
EdmItemCollection ItemCollection=loader.CreateEdmItemCollection(inputFile);
string namespaceName=code.VsNamespaceSuggestion();
var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>

using HNCJ.DY.DAL;
using HNCJ.DY.IDAL;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;

namespace HNCJ.DY.DalFactory
{
    public class StaticDalFactory
    {
       public static string assemblyName = System.Configuration.ConfigurationManager.AppSettings["DalAssemblyName"];
      
	<#

	foreach (var entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name))
	{
	#>
	 public static I<#=entity.Name#>Dal Get<#=entity.Name#>Dal()
        {
            return Assembly.Load(assemblyName).CreateInstance(assemblyName + ".<#=entity.Name#>Dal") as I<#=entity.Name#>Dal;
        }
	
	
	<#
	}
	#>
	
	}

}